/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package socket;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.Socket;
import javax.swing.ButtonGroup;

/**
 *
 * @author Asus
 */
public class InfoClientGUI extends javax.swing.JFrame {

    private final int INFO_PORT = 50000;
    private final String TargetHost = "localhost";
    private final String QUIT = "QUIT";
    private DataOutputStream outToServer;
    private BufferedReader inFromServer;
    private Socket clientSocket;

    /**
     * Creates new form InfoClientGUI
     */
    public InfoClientGUI() {
        initComponents();
        groupButton();
        try{
            clientSocket = new Socket(TargetHost, INFO_PORT);
            outToServer = new DataOutputStream(clientSocket.getOutputStream());
            inFromServer = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
            System.out.println(inFromServer.readLine());
            System.out.println(inFromServer.readLine());
            System.out.println(inFromServer.readLine());
            System.out.println("");
        } catch (IOException ioe) {
            hasil.setText("Error:" + ioe);
        } catch (Exception e) {
            hasil.setText("Error:" + e);
        }
        
    }

    private void groupButton() {
        ButtonGroup bg1 = new ButtonGroup();
        bg1.add(radioButtonTime);
        bg1.add(radioButtonNet);
        bg1.add(radioButtonLocal);
        bg1.add(radioButtonQuit);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuGroup = new javax.swing.ButtonGroup();
        radioButtonTime = new javax.swing.JRadioButton();
        radioButtonNet = new javax.swing.JRadioButton();
        radioButtonLocal = new javax.swing.JRadioButton();
        radioButtonQuit = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        hasil = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        buttonSelect = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        radioButtonTime.setText("TIME");

        radioButtonNet.setText("NET");

        radioButtonLocal.setText("LOCALADRESS");

        radioButtonQuit.setText("QUIT");

        hasil.setColumns(20);
        hasil.setRows(5);
        jScrollPane1.setViewportView(hasil);

        jLabel1.setText("Hasil");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Info Client");

        buttonSelect.setText("Select");
        buttonSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSelectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonSelect)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioButtonTime)
                            .addComponent(radioButtonNet))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioButtonQuit)
                            .addComponent(radioButtonLocal)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioButtonTime)
                    .addComponent(radioButtonLocal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioButtonNet)
                    .addComponent(radioButtonQuit))
                .addGap(18, 18, 18)
                .addComponent(buttonSelect)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void kirimServer(){
        try {
            if (radioButtonTime.isSelected()) {
                outToServer.writeBytes("TIME" + "\n");
            } else if (radioButtonNet.isSelected()) {
                outToServer.writeBytes("NET" + "\n");
            } else if (radioButtonLocal.isSelected()) {
                outToServer.writeBytes("LOCALHOST" + "\n");
            } else if (radioButtonQuit.isSelected()) {
                outToServer.close();
                inFromServer.close();
                clientSocket.close();
                System.exit(0);
            }
            String result = inFromServer.readLine();
            hasil.append("Dari Server: " + result);
            
        } catch(IOException ioe) {
            hasil.setText("Error:" + ioe);
            
        } catch(Exception e) {
            hasil.setText("Error:" + e);        
        }
    }
    
    private void buttonSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSelectActionPerformed
        kirimServer();
    }//GEN-LAST:event_buttonSelectActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InfoClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InfoClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InfoClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InfoClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InfoClientGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonSelect;
    private javax.swing.JTextArea hasil;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.ButtonGroup menuGroup;
    private javax.swing.JRadioButton radioButtonLocal;
    private javax.swing.JRadioButton radioButtonNet;
    private javax.swing.JRadioButton radioButtonQuit;
    private javax.swing.JRadioButton radioButtonTime;
    // End of variables declaration//GEN-END:variables
}
